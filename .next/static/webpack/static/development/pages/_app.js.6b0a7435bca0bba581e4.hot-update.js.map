{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.6b0a7435bca0bba581e4.hot-update.js","sources":["webpack:///./components/RemoveFromCart.js"],"sourcesContent":["import React from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport styled from  'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport gql from 'graphql-tag';\r\nimport { CURRENT_USER_QUERY } from './User';\r\n\r\nconst REMOVE_FROM_CART_MUTATION = gql`\r\n    mutation removeFromCart($id: ID!){\r\n        removeFromCart(id: $id) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nconst BigButton = styled.button`\r\n    font-size: 3rem;\r\n    background: none;\r\n    border: 0;\r\n    &:hover {\r\n        color: ${props => props.theme.red};\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nclass RemoveFromCart extends React.Component {\r\n    static propTypes = {\r\n        id: PropTypes.string.isRequired,\r\n    };\r\n\r\n    // this get called as soon as we get a response back from\r\n    // the server after a mutation bas been performed\r\n    update = (cache, payload) => {\r\n        // 1. read the cache\r\n        const data = cache.readQuery({\r\n            query: CURRENT_USER_QUERY\r\n        })\r\n        // 2. remove the item from the cart\r\n        const cartItemId = payload.data.removeFromCart.id;\r\n        data.me.cart = data.me.cart.filter(cartItem =>\r\n            cartItem.id !== cartItemId);\r\n        // 3. write it back to the cache\r\n        cache.writeQuery({ query: CURRENT_USER_QUERY, data });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Mutation \r\n                mutation={REMOVE_FROM_CART_MUTATION}\r\n                variables={{ id: this.props.id }}\r\n                update={this.update}\r\n                optimisticResponse={{\r\n                    __typeName: 'Mutation',\r\n                    removeFromCart: {\r\n                        __typeName: 'CartItem',\r\n                        id: this.props.id,\r\n                    }}\r\n                }\r\n            >\r\n                {(removeFromCart, { loading, error }) => (\r\n                    <BigButton  \r\n                        disabled={loading} \r\n                        title=\"Delete Item\"\r\n                        onClick={() => {\r\n                            removeFromCart().catch(err => alert(err.message))}\r\n                        } \r\n                    >\r\n                        &times;\r\n                    </BigButton>\r\n                )}\r\n            </Mutation>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RemoveFromCart;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AA/CA;AACA;AADA;AAEA;AADA;AACA;AAgDA;;;;A","sourceRoot":""}