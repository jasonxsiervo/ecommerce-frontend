{"version":3,"file":"static/webpack/static\\development\\pages\\permissions.js.06d37c8069378cf9bdf3.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query } from 'react-apollo';\r\nimport Error from './ErrorMessage';\r\nimport gql from 'graphql-tag';\r\nimport Table from './styles/Table';\r\nimport SickButton from './styles/SickButton';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst possiblePermissions = [\r\n    'ADMIN',\r\n    'USER',\r\n    'ITEMCREATE',\r\n    'ITEMUPDATE',\r\n    'ITEMDELETE',\r\n    'PERMISSIONSUPDATE'\r\n];\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n    query{\r\n        users{\r\n            id \r\n            name \r\n            email\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nconst Permissions = props => (\r\n    <Query query={ALL_USERS_QUERY}>\r\n        {({data, loading, error}) => (\r\n            <div>\r\n                <Error error={error} />\r\n                \r\n                <div>\r\n                    <h2>Permissions</h2>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                {\r\n                                    possiblePermissions.map(permission =>\r\n                                    (<th>{permission}</th>))\r\n                                }\r\n                                <th>üëáüèº</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.users.map(user => (<User user={user}/>))}\r\n                        </tbody>\r\n\r\n                    </Table>\r\n\r\n                </div>\r\n            </div>\r\n        )}\r\n\r\n    </Query>\r\n);\r\n\r\nclass User extends React.Component {\r\n    \r\n    static propTypes = {\r\n        user: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            email: PropTypes.string,\r\n            id: PropTypes.string,\r\n            permissions: PropTypes.array,\r\n        }).isRequired\r\n    };\r\n\r\n    render() {\r\n        const user = this.props.user;\r\n        return (\r\n            <tr>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                {possiblePermissions.map(permission => (\r\n                    <td>\r\n                        <label htmlFor={`${user.id}-permissions-${permission}`}>\r\n                            <input type=\"checkbox\" />\r\n                        </label>\r\n                    </td>\r\n                ))}\r\n            \r\n            <td>\r\n                <SickButton>Update</SickButton>\r\n            </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Permissions;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AAUA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAFA;AACA;AAgCA;;;;;;;;;;;;;AAWA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9BA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AA8BA;;;;A","sourceRoot":""}