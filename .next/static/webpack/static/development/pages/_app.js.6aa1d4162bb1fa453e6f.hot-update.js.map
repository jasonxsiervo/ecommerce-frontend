{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.6aa1d4162bb1fa453e6f.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from 'react';\r\nimport Downshift from 'downshift';\r\nimport Router from 'next/router';\r\nimport { ApolloConsumer } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport debounce from 'lodash.debounce';\r\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\r\n\r\nconst SEARCH_ITEMS_QUERY = gql`\r\n    query SEARCH_ITEMS_QUERY($searchTerm: String!) {\r\n        items( where: { OR: [\r\n            { title_contains: $searchTerm },\r\n            { description_contains: $searchTerm },\r\n        ] }) {\r\n            id\r\n            image\r\n            title\r\n        }\r\n    }\r\n`;\r\n\r\nfunction routeToItem(item) {\r\n  console.log(item);\r\n}\r\n\r\nclass AutoComplete extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        items: [],\r\n    }\r\n\r\n    onChange = debounce(async (e, client) => {\r\n        // turn loading on\r\n        this.setState({ loading: true });\r\n        // Manually query apollo client\r\n        const res = await client.query({\r\n            query: SEARCH_ITEMS_QUERY,\r\n            variables: { searchTerm: e.target.value },\r\n        });\r\n        console.log(res)\r\n        this.setState({\r\n            items: res.data.items,\r\n            loading: false,\r\n        });\r\n    }, 350);\r\n\r\n    render() {\r\n        return (\r\n          <SearchStyles>\r\n            <Downshift \r\n              itemToString={item => (item === null ? '':item.title)}\r\n            >\r\n              {({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (   \r\n                <div>\r\n                  <ApolloConsumer>\r\n                    {client => (\r\n                      <input\r\n                        {...getInputProps({\r\n                          type: 'search',\r\n                          placeholder: 'Search for an item',\r\n                          id: 'search',\r\n                          className: this.state.loading ? 'loading' : '',\r\n                          onChange: e => {\r\n                            e.persist();\r\n                            this.onChange(e, client);\r\n                          }\r\n                        })}\r\n                      />\r\n                    )}\r\n                  </ApolloConsumer>\r\n                  {isOpen && (\r\n                    <DropDown>\r\n                      {this.state.items.map(( item, index ) => (\r\n                        <DropDownItem \r\n                          {...getItemProps({ item })}\r\n                          key={item.id}\r\n                          highlighted={ index === highlightedIndex }\r\n                        >\r\n                          <img width=\"50\" src={item.image} alt={item.title} />\r\n                          {item.title}\r\n                        </DropDownItem>\r\n                      ))}\r\n                    </DropDown>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Downshift>\r\n          </SearchStyles>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutoComplete;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAKA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAIA;AAIA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AApBA;AAqCA;;;;AAhEA;AACA;AAkEA;;;;A","sourceRoot":""}